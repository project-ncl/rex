scheduler:
  baseUrl: ${BASE_URL}
  name: node
  options:
    concurrency:
      default: 5
    retry-policy:
      maxRetries: 15
      delay: 10
      jitter: 50
      abortOn: javax.validation.ConstraintViolationException, org.jboss.pnc.rex.common.exceptions.TaskMissingException, org.jboss.pnc.rex.common.exceptions.BadRequestException, org.jboss.pnc.rex.common.exceptions.TaskConflictException, org.jboss.pnc.rex.common.exceptions.CircularDependencyException

quarkus:
  package:
    type: fast-jar

  http:
    cors: true
    port: 80

  oidc:
    enabled: true
    auth-server-url: https://keycloak.com/auth/realms/quarkus
    client-id: client
    credentials:
      secret: secret
    application-type: SERVICE
    tls:
      verification: none

  infinispan-client:
    server-list: ${ISPN_NODE}
    use-schema-registration: false
    use-auth: true
    auth-username: ${ISPN_USER}
    auth-password: ${ISPN_PASS}

  swagger-ui:
    always-include: true

  log:
    console:
      format: "%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{3.}] (%t) %s%e%n"
    category:
      "org.jboss.pnc":
        level: DEBUG
      "com.arjuna.ats.jta":
        # Set to WARN if you want to see all the exceptions
        level: ERROR
      "io.smallrye.faulttolerance.core":
        level: TRACE

  vertx:
    max-event-loop-execute-time: 10s

org:
  jboss:
    pnc:
      rex:
        core:
          delegates:
            TolerantQueueManager/poke/Retry/maxRetries: ${scheduler.options.retry-policy.maxRetries}
            TolerantQueueManager/poke/Retry/delay: ${scheduler.options.retry-policy.delay}
            TolerantQueueManager/poke/Retry/jitter: ${scheduler.options.retry-policy.jitter}
            TolerantQueueManager/poke/Retry/abortOn: ${scheduler.options.retry-policy.abortOn}
            TolerantQueueManager/decreaseRunningCounter/Retry/maxRetries: ${scheduler.options.retry-policy.maxRetries}
            TolerantQueueManager/decreaseRunningCounter/Retry/delay: ${scheduler.options.retry-policy.delay}
            TolerantQueueManager/decreaseRunningCounter/Retry/jitter: ${scheduler.options.retry-policy.jitter}
            TolerantQueueManager/decreaseRunningCounter/Retry/abortOn: ${scheduler.options.retry-policy.abortOn}
            TolerantQueueManager/setMaximumConcurrency/Retry/maxRetries: ${scheduler.options.retry-policy.maxRetries}
            TolerantQueueManager/setMaximumConcurrency/Retry/delay: ${scheduler.options.retry-policy.delay}
            TolerantQueueManager/setMaximumConcurrency/Retry/jitter: ${scheduler.options.retry-policy.jitter}
            TolerantQueueManager/setMaximumConcurrency/Retry/abortOn: ${scheduler.options.retry-policy.abortOn}
        rest:
          InternalEndpointImpl/finish/Retry/maxRetries: ${scheduler.options.retry-policy.maxRetries}
          InternalEndpointImpl/finish/Retry/delay: ${scheduler.options.retry-policy.delay}
          InternalEndpointImpl/finish/Retry/jitter: ${scheduler.options.retry-policy.jitter}
          InternalEndpointImpl/finish/Retry/abortOn: ${scheduler.options.retry-policy.abortOn}
          InternalEndpointImpl/setConcurrent/Retry/maxRetries: ${scheduler.options.retry-policy.maxRetries}
          InternalEndpointImpl/setConcurrent/Retry/delay: ${scheduler.options.retry-policy.delay}
          InternalEndpointImpl/setConcurrent/Retry/jitter: ${scheduler.options.retry-policy.jitter}
          InternalEndpointImpl/setConcurrent/Retry/abortOn: ${scheduler.options.retry-policy.abortOn}
          TaskEndpointImpl/start/Retry/maxRetries: ${scheduler.options.retry-policy.maxRetries}
          TaskEndpointImpl/start/Retry/delay: ${scheduler.options.retry-policy.delay}
          TaskEndpointImpl/start/Retry/jitter: ${scheduler.options.retry-policy.jitter}
          TaskEndpointImpl/start/Retry/abortOn: ${scheduler.options.retry-policy.abortOn}
          TaskEndpointImpl/cancel/Retry/maxRetries: ${scheduler.options.retry-policy.maxRetries}
          TaskEndpointImpl/cancel/Retry/delay: ${scheduler.options.retry-policy.delay}
          TaskEndpointImpl/cancel/Retry/jitter: ${scheduler.options.retry-policy.jitter}
          TaskEndpointImpl/cancel/Retry/abortOn: ${scheduler.options.retry-policy.abortOn}



"%test":
   scheduler:
     baseUrl: http://localhost:8081
   quarkus:
     log:
       category:
         "org.testcontainers":
           level: DEBUG
     oidc:
       enabled: false
     transaction-manager:
       default-transaction-timeout: 10m
     http:
       port: 8081
     infinispan-client:
       client-intelligence: BASIC
       server-list: localhost:11222
       use-schema-registration: true
       use-auth: true
       auth-username: admin
       auth-password: password

"%dev":
   scheduler:
     baseUrl: http://localhost:8181

   quarkus:
     transaction-manager:
       default-transaction-timeout: 10m
     http:
       port: 8181
     infinispan-client:
       use-schema-registration: true
       use-auth: true
       auth-username: admin
       auth-password: password

     log:
       category:
         "org.jboss.pnc":
           level: TRACE
